<%- include("template/cabecera", {tituloWeb: 'Cita Medica' }) %>
<div class="container">
  <div class="d-flex justify-content-center align-items-center vh-100">
    <div>
      
      <% if (error) { %> <%= mensaje %>
      <a href="/citasmedicas" class="btn btn-dark btn-block my-2"> Volver </a>
      <% } %> <% if (!error) { %>
      <h1>Detalle Cita Medica</h1>
      <form id="editar" data-id="<%= cita.citaId %>">
      <hr />
      <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-default"
          ># Cédula</span
        >
        <input
          type="text"
          value="<%= cita.paciente.numeroCedula %>"
          class="form-control my-2 flex-grow-1"
          name="numeroCedula"
          id="numeroCedulaInput"
        />
        <input type="hidden" id="pacienteId" name="pacienteId" value="<%=cita.paciente.pacienteId%>">
        <div id="errornumeroCedula" class="invalid-feedback"></div>
      </div>
      <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-default">Especialidad</span>
        <select name="especialidadId" id="especialidadSelect">
          <option value="">.............</option> <!-- Opción por defecto -->
          <% especialidades.forEach(especialidad => { %>
            <option value="<%= especialidad.especialidadId %>" <%= especialidad.especialidadId === cita.especialidad.especialidadId ? 'selected' : '' %>>
              <%= especialidad.nombreEspecialidad %>
            </option>
          <% }) %>
        </select>
        <div id="errorEspecialidad" class="invalid-feedback"></div>
      </div>
      <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-default-span">Citas Medicas</span>
        <select name="doctorEs" id="doctorEsSelect">
          <option value="">.............</option> <!-- Opción por defecto -->
          <% doctorEs.forEach(doctorE => { %>
            <option value="<%= doctorE.doctorId %>" <%= cita.doctor.doctorId && doctorE.doctorId === cita.doctor.doctorId  ? 'selected' : '' %>>
              <%= doctorE.nombre %> <%= doctorE.apellido %>
            </option>
          <% }) %>
        </select>

        <div id="errordoctorEs" class="invalid-feedback"></div>
      </div>
      <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-default"
          >Fecha</span
        >
        <input
          type="date"
          value="<%=fechaFormateada %>"
          class="form-control my-2 flex-grow-1"
          name="fecha"
          id="fechaInput"
        />
        <div id="errorfecha" class="invalid-feedback"></div>
      </div>
      <div class="row g-0 text-center">
        <div class="col-sm-4 col-md-4"></div>
        <div class="col-sm-4 col-md-4">
          <button class="btn btn-warning btn-block" type="submit">
            Editar
          </button>
        </div>
        <div class="col-sm-4 col-md-4"></div>
      </div>
      <hr>
    </form>
      <div class="row g-0 text-center">
        <div class="col-sm-4 col-md-4"></div>
        <div class="col-sm-4 col-md-4">
          <button class="btn btn-danger" onclick="cancelar()">Cancelar</button>
        </div>
        <div class="col-sm-4 col-md-4"></div>
      </div>

      <% } %>
    </div>
  </div>
</div>

<%- include("template/footer") %>
<script>
  // onclick vs addEventListener
  // https://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick#:~:text=Essentially%20onclick%20is%20a%20HTML,(using%20this%20for%20example).
  function cancelar() {
    const confirmacion = confirm("¿Estás seguro de que quieres cancelar?");
    if (confirmacion) {
      window.location.href = "/citasmedicas";
    }
  }
  const formEditar = document.querySelector("#editar");
  const especialidadSelect = document.querySelector("#especialidadSelect");
  
  document.addEventListener("DOMContentLoaded", function () {
    //Cuando inicia
  });
  
  // Escuchar el evento de cambio en el select de especialidad
  especialidadSelect.addEventListener("change", async (e) => {
    e.preventDefault();
    const citaId = formEditar.dataset.id;
    const especialidadId = especialidadSelect.value;
  
    const params = new URLSearchParams();
    params.append("especialidadId", especialidadId);
    params.append("numeroCedula","");
    const url = `/citasmedicas/${citaId}?${params.toString()}`;
  
    const data = await fetch(url, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });
    
    const res = await data.json();  
    // Accede a los datos de la respuesta JSON según sea necesario
    console.log(res.doctorEs);
    const doctorEs = res.doctorEs;
    const cita = res.cita;
    // Selecciona el elemento select en el DOM
    const doctorEsSelect = document.querySelector("#doctorEsSelect");
    const spanElement = document.getElementById("inputGroup-sizing-default-span");
    // Limpia el contenido actual del select
    doctorEsSelect.innerHTML = "";
    spanElement.textContent = "Doctores";
    // Genera las opciones del select basadas en los datos de doctorEs
    const option = document.createElement("option");
      option.value = "";
      option.textContent = `...................`;
      doctorEsSelect.appendChild(option);
    doctorEs.forEach(doctorE => {
      const option = document.createElement("option");
      option.value = doctorE.doctorId;
      option.textContent = `${doctorE.nombre} ${doctorE.apellido}`;
  
      // Agrega la opción al select
      doctorEsSelect.appendChild(option);
    });
  });
  formEditar.addEventListener("submit", async (e) => {
    e.preventDefault();
    const citaId= formEditar.dataset.id;
    const especialidadId = formEditar.elements["especialidadId"].value;
    const doctorId = formEditar.elements["doctorEs"].value;
    const fecha = formEditar.elements["fecha"].value;
    const numeroCedula = formEditar.elements["numeroCedula"].value;
    const cedRegex = /^\d{1,10}\b$/;

    if (!cedRegex.test(numeroCedula) && numeroCedula) {
      // Mostrar mensaje de error y resaltar el campo de entrada
      errornumeroCedula.textContent = "Cedula inválida";
      errornumeroCedula.classList.add("d-block");
      numeroCedulaInput.classList.add("is-invalid");

      // Evitar la sumisión del formulario
      e.preventDefault();
      e.stopPropagation();
      return;
    }else{
      // Si la validación es exitosa, limpiar el mensaje de error y la clase de error
      errornumeroCedula.textContent = "";
      errornumeroCedula.classList.remove("d-block");
      numeroCedulaInput.classList.remove("is-invalid");
    }
    if (!especialidadId) {
      document.getElementById("errorEspecialidad").textContent =
        "La especialidad es obligatorio";
      document.getElementById("errorEspecialidad").classList.add("d-block");
      formEditar.elements["especialidadId"].classList.add("is-invalid");
      e.preventDefault();
    e.stopPropagation();
    return;
    }else{
      document.getElementById("errorEspecialidad").textContent =
      "";
    document.getElementById("errorEspecialidad").classList.remove("d-block");
    formEditar.elements["especialidadId"].classList.remove("is-invalid");
    }

    if (!doctorId) {
      document.getElementById("errordoctorEs").textContent =
        "El Doctor es obligatorio";
      document.getElementById("errordoctorEs").classList.add("d-block");
      formEditar.elements["doctorEs"].classList.add("is-invalid");
      e.preventDefault();
      e.stopPropagation();
    return;
    }else{
      document.getElementById("errordoctorEs").textContent =
        "";
      document.getElementById("errordoctorEs").classList.remove("d-block");
      formEditar.elements["doctorEs"].classList.remove("is-invalid");
    }
    if (!fecha) {
      document.getElementById("errorfecha").textContent =
        "La Fecha es obligatoria";
      document
        .getElementById("errorfecha")
        .classList.add("d-block");
      formEditar.elements["fecha"].classList.add("is-invalid");
      e.preventDefault();
    e.stopPropagation();
    return;
    }else{
      document.getElementById("errorfecha").textContent =
        "";
      document
        .getElementById("errorfecha")
        .classList.remove("d-block");
      formEditar.elements["fecha"].classList.remove("is-invalid");
    }
    if (cedRegex.test(numeroCedula) && numeroCedula) {
      const params = new URLSearchParams();
      params.append("especialidadId", especialidadId);
      params.append("numeroCedula",numeroCedula);
      const url = `/citasmedicas/${citaId}?${params.toString()}`;
    numeroCedula
      const data1 = await fetch(url, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });
      
      const res1 = await data1.json();
      const pacienteId= res1.paciente.pacienteId;
      let disponibilidad=res1.cita.disponibilidad;
      if(disponibilidad==1){
        if(pacienteId){
          disponibilidad= 0;
          const data = await fetch(`/citasmedicas/${citaId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              doctor: {
                doctorId
              },
              paciente: {
                pacienteId,
              },
              especialidad: {
                especialidadId,
              },
              fecha,
              disponibilidad,
              citaId,
            }),
          });
      
          const res = await data.json();
          if (res["Record(s) updated"]["responseJSON"]["estado"]) {
            window.alert(
              `Cita ${res["Record(s) updated"]["responseJSON"]["id"]} ${res["Record(s) updated"]["responseJSON"]["mensaje"]}`
            );
            window.location.href = "/citasmedicas";
          } else {
            console.log(res["Record(s) updated"]["responseJSON"]);
          }
        }else{
          window.alert(
              `No Existe esa Cedula`
            );
        }
      }else{
        if(pacienteId){
          const data = await fetch(`/citasmedicas/${citaId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              doctor: {
                doctorId
              },
              paciente: {
                pacienteId,
              },
              especialidad: {
                especialidadId,
              },
              fecha,
              disponibilidad,
              citaId,
            }),
          });
      
          const res = await data.json();
          if (res["Record(s) updated"]["responseJSON"]["estado"]) {
            window.alert(
              `Cita ${res["Record(s) updated"]["responseJSON"]["id"]} ${res["Record(s) updated"]["responseJSON"]["mensaje"]}`
            );
            window.location.href = "/citasmedicas";
          } else {
            console.log(res["Record(s) updated"]["responseJSON"]);
          }
        }else{
          window.alert(
              `No Existe esa Cedula`
            );
        }
      }
      

    }else{
      const params = new URLSearchParams();
      params.append("especialidadId", especialidadId);
      params.append("numeroCedula","");
      const url = `/citasmedicas/${citaId}?${params.toString()}`;
    numeroCedula
      const data1 = await fetch(url, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });
      
      const res1 = await data1.json();
      const pacienteId= res1.paciente.pacienteId;
      let disponibilidad=res1.cita.disponibilidad;
      if(disponibilidad==1){
          const data = await fetch(`/citasmedicas/${citaId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              doctor: {
                doctorId
              },
              paciente: {
                pacienteId,
              },
              especialidad: {
                especialidadId,
              },
              fecha,
              disponibilidad,
              citaId,
            }),
          });
      
          const res = await data.json();
          if (res["Record(s) updated"]["responseJSON"]["estado"]) {
            window.alert(
              `Cita ${res["Record(s) updated"]["responseJSON"]["id"]} ${res["Record(s) updated"]["responseJSON"]["mensaje"]}`
            );
            window.location.href = "/citasmedicas";
          } else {
            console.log(res["Record(s) updated"]["responseJSON"]);
          }
        
      }else{
        disponibilidad=1
          const data = await fetch(`/citasmedicas/${citaId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              doctor: {
                doctorId
              },
              paciente: {
                pacienteId,
              },
              especialidad: {
                especialidadId,
              },
              fecha,
              disponibilidad,
              citaId,
            }),
          });
      
          const res = await data.json();
          if (res["Record(s) updated"]["responseJSON"]["estado"]) {
            window.alert(
              `Cita ${res["Record(s) updated"]["responseJSON"]["id"]} ${res["Record(s) updated"]["responseJSON"]["mensaje"]}`
            );
            window.location.href = "/citasmedicas";
          } else {
            console.log(res["Record(s) updated"]["responseJSON"]);
          }
        
      }
    }
    
    
  });
</script>
